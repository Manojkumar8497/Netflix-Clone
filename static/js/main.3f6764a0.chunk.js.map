{"version":3,"sources":["components/Nabar/Navbar.jsx","services/httpService.js","services/requests.js","components/Banner/Banner.jsx","components/Row/Row.jsx","App.jsx","index.js"],"names":["Navbar","useState","show","setShow","useEffect","window","addEventListener","scrollY","removeEventListener","className","src","alt","axios","interceptors","response","use","error","status","console","log","toast","Promise","reject","defaults","baseURL","process","get","post","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fecthActionMovies","fecthComedyMovies","fecthHorrorMovies","fecthRomanceMovies","Banner","str","n","movie","setMovie","a","httpService","data","randomIndex","Math","floor","random","results","length","message","fetchData","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","getMovieName","original_title","handleRowClick","movieTrailer","youtubeUrl","urlParams","URLSearchParams","URL","search","youtubeId","map","key","id","path","poster_path","onClick","bind","videoId","opts","height","width","playerVars","autoplay","rows","requestUrl","App","Fragment","row","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f6764a0.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) setShow(true);\r\n      else setShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`navbar ${show && \"nav__black\"}`}>\r\n      <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/255px-Netflix_2015_logo.svg.png\"\r\n        className=\"navbar__logo\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        className=\"navbar__avatar\"\r\n        alt=\"navbar__avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// For error handling\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedError) {\r\n        console.log(\"Logging the error\", error);\r\n        toast.error(\"An unexpected error occured!\");\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\n// BaseUrl setup\r\naxios.defaults.baseURL = process.env.REACT_APP_TMDB_API_URL;\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post\r\n};","const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fecthActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fecthComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fecthHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fecthRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Services\r\nimport httpService from \"../../services/httpService\";\r\nimport requests from \"./../../services/requests\";\r\n\r\n// CSS\r\nimport \"./Banner.css\";\r\n\r\n// Image base url\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Banner() {\r\n  //   State\r\n  const [movie, setMovie] = useState(null);\r\n  // Life cycle hook\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const { data } = await httpService.get(requests.fetchNetflixOriginals);\r\n        const randomIndex = Math.floor(Math.random() * data.results.length - 1);\r\n        setMovie(data.results[randomIndex]);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  //   Truncate text\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  };\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${baseUrl}${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        {/* Title */}\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        {/* Actions button */}\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        {/* Description */}\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Services\r\nimport httpService from \"../../services/httpService\";\r\n\r\n// CSS\r\nimport \"./Row.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Image base url\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  // State\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(null);\r\n  //   Hooks life cycle\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const { data } = await httpService.get(fetchUrl);\r\n        setMovies(data.results);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  // Configuration options for react-youtube\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  // const trailerUrl = \"XtMThy8QKqU\";\r\n  // Mapping the image path\r\n  function imagePath(path) {\r\n    return `${baseUrl}${path}`;\r\n  }\r\n\r\n  function getMovieName(movie) {\r\n    return (\r\n      movie?.original_name ||\r\n      movie?.original_title ||\r\n      movie?.name ||\r\n      movie?.title\r\n    );\r\n  }\r\n\r\n  const handleRowClick = async (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(null);\r\n    } else {\r\n      try {\r\n        // Getting the youtube video id based on the movie title\r\n        const youtubeUrl = await movieTrailer(getMovieName(movie));\r\n        // https:www.youtube.com/watch?v=Xreu3Vb29NrZ => destructuring the id from youtube link address\r\n        const urlParams = new URLSearchParams(new URL(youtubeUrl).search);\r\n        const youtubeId = urlParams.get(\"v\");\r\n        setTrailerUrl(youtubeId);\r\n      } catch (error) {\r\n        toast.error(`Oops ${getMovieName(movie)} trailer is not Found`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {/* Title */}\r\n      <h3>{title}</h3>\r\n      {/* Container - Movie Poster */}\r\n      <div className=\"row__posters\">\r\n        {/* Rendering the lists of movies */}\r\n        {movies.length > 0 &&\r\n          movies.map((movie) => (\r\n            <img\r\n              key={movie.id}\r\n              className={`row__posterImage ${\r\n                isLargeRow && \"row__posterLarger\"\r\n              }`}\r\n              src={imagePath(\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              )}\r\n              alt={movie.name}\r\n              onClick={handleRowClick.bind(this, movie)}\r\n            />\r\n          ))}\r\n      </div>\r\n      {/* Youtube embedded */}\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"./App.css\";\n\n// Components\nimport Navbar from \"./components/Nabar/Navbar\";\nimport Banner from \"./components/Banner/Banner\";\nimport Row from \"./components/Row/Row\";\n// Services\nimport requests from \"./services/requests\";\n\nconst rows = [\n  {\n    title: \"Netflix Originals\",\n    requestUrl: requests.fetchNetflixOriginals,\n    isLargeRow: true,\n  },\n  {\n    title: \"Trending Now\",\n    requestUrl: requests.fetchTrending,\n    isLargeRow: false,\n  },\n  {\n    title: \"Top Rated\",\n    requestUrl: requests.fetchTopRated,\n    isLargeRow: false,\n  },\n  {\n    title: \"Action Movies\",\n    requestUrl: requests.fecthActionMovies,\n    isLargeRow: false,\n  },\n  {\n    title: \"Comedy Movies\",\n    requestUrl: requests.fecthComedyMovies,\n    isLargeRow: false,\n  },\n  {\n    title: \"Horror Movies\",\n    requestUrl: requests.fecthHorrorMovies,\n    isLargeRow: false,\n  },\n  {\n    title: \"Romance Movies\",\n    requestUrl: requests.fecthRomanceMovies,\n    isLargeRow: false,\n  },\n];\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <div className=\"app\">\n        {/* Error message toaster */}\n        {/* Navbar */}\n        <Navbar />\n        {/* Banner */}\n        <Banner />\n        {/* Rendering the list of rows */}\n        {rows.length > 0 &&\n          rows.map((row, index) => (\n            <Row\n              key={index}\n              title={row.title}\n              fetchUrl={row.requestUrl}\n              isLargeRow={row.isLargeRow}\n            />\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}